name: Build and Release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  desktop-release:
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

#      - name: Cache turbo build setup
#        uses: actions/cache@v4
#        with:
#          path: .turbo
#          key: ${{ runner.os }}-turbo-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        env:
          ROCKITE_PLATFORM: electron
          ROCKITE_PERSISTENCE_DRIVER: localstorage
          ROCKITE_ENABLE_REDUX_DEV_TOOLS: false
        run: pnpm run build:desktop-linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        env:
          ROCKITE_PLATFORM: electron
          ROCKITE_PERSISTENCE_DRIVER: localstorage
          ROCKITE_ENABLE_REDUX_DEV_TOOLS: false
        run: pnpm run build:desktop-mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        env:
          ROCKITE_PLATFORM: electron
          ROCKITE_PERSISTENCE_DRIVER: localstorage
          ROCKITE_ENABLE_REDUX_DEV_TOOLS: false
        run: pnpm run build:desktop-win

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: desktop-${{ matrix.os }}
          path: ${{ github.workspace }}/apps/desktop/dist/**/*
          compression-level: '9'

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            ${{ github.workspace }}/apps/desktop/dist/*.exe
            ${{ github.workspace }}/apps/desktop/dist/*.zip
            ${{ github.workspace }}/apps/desktop/dist/*.dmg
            ${{ github.workspace }}/apps/desktop/dist/*.AppImage
            ${{ github.workspace }}/apps/desktop/dist/*.snap
            ${{ github.workspace }}/apps/desktop/dist/*.deb
            ${{ github.workspace }}/apps/desktop/dist/*.rpm
            ${{ github.workspace }}/apps/desktop/dist/*.tar.gz
            ${{ github.workspace }}/apps/desktop/dist/*.blockmap
            ${{ github.workspace }}/apps/desktop/dist/latest*.yml

  webext-release:
    strategy:
      matrix:
        browser:
          - chrome
#          - firefox

    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: build-chrome
        if: matrix.browser == 'chrome'
        env:
          ROCKITE_PLATFORM: chrome
          ROCKITE_PERSISTENCE_DRIVER: localstorage
          ROCKITE_ENABLE_REDUX_DEV_TOOLS: false
        run: pnpm run build:webext-chrome

      - name: build-firefox
        if: matrix.browser == 'firefox'
        env:
          ROCKITE_PLATFORM: chrome
          ROCKITE_PERSISTENCE_DRIVER: localstorage
          ROCKITE_ENABLE_REDUX_DEV_TOOLS: false
        run: pnpm run build:webext-firefox

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webext-${{ matrix.browser }}
          path: ${{ github.workspace }}/apps/webext/dist/**/*
          compression-level: '9'

      - name: Rename chrome extension zip to crx
        if: matrix.browser == 'chrome'
        working-directory: ${{ github.workspace }}/apps/webext/dist
        run: for f in *-chrome.zip; do mv "$f" "${f%.zip}.crx"; done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            ${{ github.workspace }}/apps/webext/dist/*.crx
            ${{ github.workspace }}/apps/webext/dist/*.zip